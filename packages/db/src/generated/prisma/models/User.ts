
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `User` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.js"
import type * as Prisma from "../internal/prismaNamespace.js"

/**
 * Model User
 * 
 */
export type UserModel = runtime.Types.Result.DefaultSelection<Prisma.$UserPayload>

export type AggregateUser = {
  _count: UserCountAggregateOutputType | null
  _avg: UserAvgAggregateOutputType | null
  _sum: UserSumAggregateOutputType | null
  _min: UserMinAggregateOutputType | null
  _max: UserMaxAggregateOutputType | null
}

export type UserAvgAggregateOutputType = {
  id: number | null
  failedPinTries: number | null
}

export type UserSumAggregateOutputType = {
  id: number | null
  failedPinTries: number | null
}

export type UserMinAggregateOutputType = {
  id: number | null
  email: string | null
  name: string | null
  number: string | null
  password: string | null
  securityPin: string | null
  createdAt: Date | null
  lastSessionAt: Date | null
  failedPinTries: number | null
  lastFailedPinTry: Date | null
  pfpPublicId: string | null
}

export type UserMaxAggregateOutputType = {
  id: number | null
  email: string | null
  name: string | null
  number: string | null
  password: string | null
  securityPin: string | null
  createdAt: Date | null
  lastSessionAt: Date | null
  failedPinTries: number | null
  lastFailedPinTry: Date | null
  pfpPublicId: string | null
}

export type UserCountAggregateOutputType = {
  id: number
  email: number
  name: number
  number: number
  password: number
  securityPin: number
  createdAt: number
  lastSessionAt: number
  failedPinTries: number
  lastFailedPinTry: number
  pfpPublicId: number
  _all: number
}


export type UserAvgAggregateInputType = {
  id?: true
  failedPinTries?: true
}

export type UserSumAggregateInputType = {
  id?: true
  failedPinTries?: true
}

export type UserMinAggregateInputType = {
  id?: true
  email?: true
  name?: true
  number?: true
  password?: true
  securityPin?: true
  createdAt?: true
  lastSessionAt?: true
  failedPinTries?: true
  lastFailedPinTry?: true
  pfpPublicId?: true
}

export type UserMaxAggregateInputType = {
  id?: true
  email?: true
  name?: true
  number?: true
  password?: true
  securityPin?: true
  createdAt?: true
  lastSessionAt?: true
  failedPinTries?: true
  lastFailedPinTry?: true
  pfpPublicId?: true
}

export type UserCountAggregateInputType = {
  id?: true
  email?: true
  name?: true
  number?: true
  password?: true
  securityPin?: true
  createdAt?: true
  lastSessionAt?: true
  failedPinTries?: true
  lastFailedPinTry?: true
  pfpPublicId?: true
  _all?: true
}

export type UserAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which User to aggregate.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Users
  **/
  _count?: true | UserCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: UserAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: UserSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: UserMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: UserMaxAggregateInputType
}

export type GetUserAggregateType<T extends UserAggregateArgs> = {
      [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateUser[P]>
    : Prisma.GetScalarType<T[P], AggregateUser[P]>
}




export type UserGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.UserWhereInput
  orderBy?: Prisma.UserOrderByWithAggregationInput | Prisma.UserOrderByWithAggregationInput[]
  by: Prisma.UserScalarFieldEnum[] | Prisma.UserScalarFieldEnum
  having?: Prisma.UserScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: UserCountAggregateInputType | true
  _avg?: UserAvgAggregateInputType
  _sum?: UserSumAggregateInputType
  _min?: UserMinAggregateInputType
  _max?: UserMaxAggregateInputType
}

export type UserGroupByOutputType = {
  id: number
  email: string
  name: string
  number: string
  password: string
  securityPin: string
  createdAt: Date
  lastSessionAt: Date
  failedPinTries: number
  lastFailedPinTry: Date | null
  pfpPublicId: string | null
  _count: UserCountAggregateOutputType | null
  _avg: UserAvgAggregateOutputType | null
  _sum: UserSumAggregateOutputType | null
  _min: UserMinAggregateOutputType | null
  _max: UserMaxAggregateOutputType | null
}

type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<UserGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], UserGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], UserGroupByOutputType[P]>
      }
    >
  >



export type UserWhereInput = {
  AND?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  OR?: Prisma.UserWhereInput[]
  NOT?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  id?: Prisma.IntFilter<"User"> | number
  email?: Prisma.StringFilter<"User"> | string
  name?: Prisma.StringFilter<"User"> | string
  number?: Prisma.StringFilter<"User"> | string
  password?: Prisma.StringFilter<"User"> | string
  securityPin?: Prisma.StringFilter<"User"> | string
  createdAt?: Prisma.DateTimeFilter<"User"> | Date | string
  lastSessionAt?: Prisma.DateTimeFilter<"User"> | Date | string
  failedPinTries?: Prisma.IntFilter<"User"> | number
  lastFailedPinTry?: Prisma.DateTimeNullableFilter<"User"> | Date | string | null
  pfpPublicId?: Prisma.StringNullableFilter<"User"> | string | null
  pfp?: Prisma.XOR<Prisma.Cloudinary_imagesNullableScalarRelationFilter, Prisma.Cloudinary_imagesWhereInput> | null
  Balance?: Prisma.BalanceListRelationFilter
  Transactions?: Prisma.TransactionsListRelationFilter
  IncomingTransaction?: Prisma.WalletTransfersListRelationFilter
  OutgoingTransaction?: Prisma.WalletTransfersListRelationFilter
  SavedBankAccounts?: Prisma.SavedBankAccountsListRelationFilter
  BankWithdrawals?: Prisma.BankWithdrawalsListRelationFilter
}

export type UserOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  email?: Prisma.SortOrder
  name?: Prisma.SortOrder
  number?: Prisma.SortOrder
  password?: Prisma.SortOrder
  securityPin?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  lastSessionAt?: Prisma.SortOrder
  failedPinTries?: Prisma.SortOrder
  lastFailedPinTry?: Prisma.SortOrderInput | Prisma.SortOrder
  pfpPublicId?: Prisma.SortOrderInput | Prisma.SortOrder
  pfp?: Prisma.Cloudinary_imagesOrderByWithRelationInput
  Balance?: Prisma.BalanceOrderByRelationAggregateInput
  Transactions?: Prisma.TransactionsOrderByRelationAggregateInput
  IncomingTransaction?: Prisma.WalletTransfersOrderByRelationAggregateInput
  OutgoingTransaction?: Prisma.WalletTransfersOrderByRelationAggregateInput
  SavedBankAccounts?: Prisma.SavedBankAccountsOrderByRelationAggregateInput
  BankWithdrawals?: Prisma.BankWithdrawalsOrderByRelationAggregateInput
}

export type UserWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  email?: string
  number?: string
  pfpPublicId?: string
  AND?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  OR?: Prisma.UserWhereInput[]
  NOT?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  name?: Prisma.StringFilter<"User"> | string
  password?: Prisma.StringFilter<"User"> | string
  securityPin?: Prisma.StringFilter<"User"> | string
  createdAt?: Prisma.DateTimeFilter<"User"> | Date | string
  lastSessionAt?: Prisma.DateTimeFilter<"User"> | Date | string
  failedPinTries?: Prisma.IntFilter<"User"> | number
  lastFailedPinTry?: Prisma.DateTimeNullableFilter<"User"> | Date | string | null
  pfp?: Prisma.XOR<Prisma.Cloudinary_imagesNullableScalarRelationFilter, Prisma.Cloudinary_imagesWhereInput> | null
  Balance?: Prisma.BalanceListRelationFilter
  Transactions?: Prisma.TransactionsListRelationFilter
  IncomingTransaction?: Prisma.WalletTransfersListRelationFilter
  OutgoingTransaction?: Prisma.WalletTransfersListRelationFilter
  SavedBankAccounts?: Prisma.SavedBankAccountsListRelationFilter
  BankWithdrawals?: Prisma.BankWithdrawalsListRelationFilter
}, "id" | "email" | "number" | "pfpPublicId">

export type UserOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  email?: Prisma.SortOrder
  name?: Prisma.SortOrder
  number?: Prisma.SortOrder
  password?: Prisma.SortOrder
  securityPin?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  lastSessionAt?: Prisma.SortOrder
  failedPinTries?: Prisma.SortOrder
  lastFailedPinTry?: Prisma.SortOrderInput | Prisma.SortOrder
  pfpPublicId?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.UserCountOrderByAggregateInput
  _avg?: Prisma.UserAvgOrderByAggregateInput
  _max?: Prisma.UserMaxOrderByAggregateInput
  _min?: Prisma.UserMinOrderByAggregateInput
  _sum?: Prisma.UserSumOrderByAggregateInput
}

export type UserScalarWhereWithAggregatesInput = {
  AND?: Prisma.UserScalarWhereWithAggregatesInput | Prisma.UserScalarWhereWithAggregatesInput[]
  OR?: Prisma.UserScalarWhereWithAggregatesInput[]
  NOT?: Prisma.UserScalarWhereWithAggregatesInput | Prisma.UserScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"User"> | number
  email?: Prisma.StringWithAggregatesFilter<"User"> | string
  name?: Prisma.StringWithAggregatesFilter<"User"> | string
  number?: Prisma.StringWithAggregatesFilter<"User"> | string
  password?: Prisma.StringWithAggregatesFilter<"User"> | string
  securityPin?: Prisma.StringWithAggregatesFilter<"User"> | string
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"User"> | Date | string
  lastSessionAt?: Prisma.DateTimeWithAggregatesFilter<"User"> | Date | string
  failedPinTries?: Prisma.IntWithAggregatesFilter<"User"> | number
  lastFailedPinTry?: Prisma.DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
  pfpPublicId?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null
}

export type UserCreateInput = {
  email: string
  name: string
  number: string
  password: string
  securityPin: string
  createdAt?: Date | string
  lastSessionAt?: Date | string
  failedPinTries?: number
  lastFailedPinTry?: Date | string | null
  pfp?: Prisma.Cloudinary_imagesCreateNestedOneWithoutUserInput
  Balance?: Prisma.BalanceCreateNestedManyWithoutUserInput
  Transactions?: Prisma.TransactionsCreateNestedManyWithoutUserInput
  IncomingTransaction?: Prisma.WalletTransfersCreateNestedManyWithoutToUserInput
  OutgoingTransaction?: Prisma.WalletTransfersCreateNestedManyWithoutFromUserInput
  SavedBankAccounts?: Prisma.SavedBankAccountsCreateNestedManyWithoutUserInput
  BankWithdrawals?: Prisma.BankWithdrawalsCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateInput = {
  id?: number
  email: string
  name: string
  number: string
  password: string
  securityPin: string
  createdAt?: Date | string
  lastSessionAt?: Date | string
  failedPinTries?: number
  lastFailedPinTry?: Date | string | null
  pfpPublicId?: string | null
  Balance?: Prisma.BalanceUncheckedCreateNestedManyWithoutUserInput
  Transactions?: Prisma.TransactionsUncheckedCreateNestedManyWithoutUserInput
  IncomingTransaction?: Prisma.WalletTransfersUncheckedCreateNestedManyWithoutToUserInput
  OutgoingTransaction?: Prisma.WalletTransfersUncheckedCreateNestedManyWithoutFromUserInput
  SavedBankAccounts?: Prisma.SavedBankAccountsUncheckedCreateNestedManyWithoutUserInput
  BankWithdrawals?: Prisma.BankWithdrawalsUncheckedCreateNestedManyWithoutUserInput
}

export type UserUpdateInput = {
  email?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  number?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  securityPin?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastSessionAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  failedPinTries?: Prisma.IntFieldUpdateOperationsInput | number
  lastFailedPinTry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  pfp?: Prisma.Cloudinary_imagesUpdateOneWithoutUserNestedInput
  Balance?: Prisma.BalanceUpdateManyWithoutUserNestedInput
  Transactions?: Prisma.TransactionsUpdateManyWithoutUserNestedInput
  IncomingTransaction?: Prisma.WalletTransfersUpdateManyWithoutToUserNestedInput
  OutgoingTransaction?: Prisma.WalletTransfersUpdateManyWithoutFromUserNestedInput
  SavedBankAccounts?: Prisma.SavedBankAccountsUpdateManyWithoutUserNestedInput
  BankWithdrawals?: Prisma.BankWithdrawalsUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  email?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  number?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  securityPin?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastSessionAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  failedPinTries?: Prisma.IntFieldUpdateOperationsInput | number
  lastFailedPinTry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  pfpPublicId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  Balance?: Prisma.BalanceUncheckedUpdateManyWithoutUserNestedInput
  Transactions?: Prisma.TransactionsUncheckedUpdateManyWithoutUserNestedInput
  IncomingTransaction?: Prisma.WalletTransfersUncheckedUpdateManyWithoutToUserNestedInput
  OutgoingTransaction?: Prisma.WalletTransfersUncheckedUpdateManyWithoutFromUserNestedInput
  SavedBankAccounts?: Prisma.SavedBankAccountsUncheckedUpdateManyWithoutUserNestedInput
  BankWithdrawals?: Prisma.BankWithdrawalsUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateManyInput = {
  id?: number
  email: string
  name: string
  number: string
  password: string
  securityPin: string
  createdAt?: Date | string
  lastSessionAt?: Date | string
  failedPinTries?: number
  lastFailedPinTry?: Date | string | null
  pfpPublicId?: string | null
}

export type UserUpdateManyMutationInput = {
  email?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  number?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  securityPin?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastSessionAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  failedPinTries?: Prisma.IntFieldUpdateOperationsInput | number
  lastFailedPinTry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type UserUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  email?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  number?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  securityPin?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastSessionAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  failedPinTries?: Prisma.IntFieldUpdateOperationsInput | number
  lastFailedPinTry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  pfpPublicId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type UserCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  email?: Prisma.SortOrder
  name?: Prisma.SortOrder
  number?: Prisma.SortOrder
  password?: Prisma.SortOrder
  securityPin?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  lastSessionAt?: Prisma.SortOrder
  failedPinTries?: Prisma.SortOrder
  lastFailedPinTry?: Prisma.SortOrder
  pfpPublicId?: Prisma.SortOrder
}

export type UserAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  failedPinTries?: Prisma.SortOrder
}

export type UserMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  email?: Prisma.SortOrder
  name?: Prisma.SortOrder
  number?: Prisma.SortOrder
  password?: Prisma.SortOrder
  securityPin?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  lastSessionAt?: Prisma.SortOrder
  failedPinTries?: Prisma.SortOrder
  lastFailedPinTry?: Prisma.SortOrder
  pfpPublicId?: Prisma.SortOrder
}

export type UserMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  email?: Prisma.SortOrder
  name?: Prisma.SortOrder
  number?: Prisma.SortOrder
  password?: Prisma.SortOrder
  securityPin?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  lastSessionAt?: Prisma.SortOrder
  failedPinTries?: Prisma.SortOrder
  lastFailedPinTry?: Prisma.SortOrder
  pfpPublicId?: Prisma.SortOrder
}

export type UserSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  failedPinTries?: Prisma.SortOrder
}

export type UserNullableScalarRelationFilter = {
  is?: Prisma.UserWhereInput | null
  isNot?: Prisma.UserWhereInput | null
}

export type UserScalarRelationFilter = {
  is?: Prisma.UserWhereInput
  isNot?: Prisma.UserWhereInput
}

export type StringFieldUpdateOperationsInput = {
  set?: string
}

export type DateTimeFieldUpdateOperationsInput = {
  set?: Date | string
}

export type IntFieldUpdateOperationsInput = {
  set?: number
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type NullableDateTimeFieldUpdateOperationsInput = {
  set?: Date | string | null
}

export type NullableStringFieldUpdateOperationsInput = {
  set?: string | null
}

export type UserCreateNestedOneWithoutPfpInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutPfpInput, Prisma.UserUncheckedCreateWithoutPfpInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutPfpInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUncheckedCreateNestedOneWithoutPfpInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutPfpInput, Prisma.UserUncheckedCreateWithoutPfpInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutPfpInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneWithoutPfpNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutPfpInput, Prisma.UserUncheckedCreateWithoutPfpInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutPfpInput
  upsert?: Prisma.UserUpsertWithoutPfpInput
  disconnect?: Prisma.UserWhereInput | boolean
  delete?: Prisma.UserWhereInput | boolean
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutPfpInput, Prisma.UserUpdateWithoutPfpInput>, Prisma.UserUncheckedUpdateWithoutPfpInput>
}

export type UserUncheckedUpdateOneWithoutPfpNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutPfpInput, Prisma.UserUncheckedCreateWithoutPfpInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutPfpInput
  upsert?: Prisma.UserUpsertWithoutPfpInput
  disconnect?: Prisma.UserWhereInput | boolean
  delete?: Prisma.UserWhereInput | boolean
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutPfpInput, Prisma.UserUpdateWithoutPfpInput>, Prisma.UserUncheckedUpdateWithoutPfpInput>
}

export type UserCreateNestedOneWithoutBalanceInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutBalanceInput, Prisma.UserUncheckedCreateWithoutBalanceInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutBalanceInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutBalanceNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutBalanceInput, Prisma.UserUncheckedCreateWithoutBalanceInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutBalanceInput
  upsert?: Prisma.UserUpsertWithoutBalanceInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutBalanceInput, Prisma.UserUpdateWithoutBalanceInput>, Prisma.UserUncheckedUpdateWithoutBalanceInput>
}

export type UserCreateNestedOneWithoutTransactionsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutTransactionsInput, Prisma.UserUncheckedCreateWithoutTransactionsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutTransactionsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutTransactionsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutTransactionsInput, Prisma.UserUncheckedCreateWithoutTransactionsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutTransactionsInput
  upsert?: Prisma.UserUpsertWithoutTransactionsInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutTransactionsInput, Prisma.UserUpdateWithoutTransactionsInput>, Prisma.UserUncheckedUpdateWithoutTransactionsInput>
}

export type UserCreateNestedOneWithoutOutgoingTransactionInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutOutgoingTransactionInput, Prisma.UserUncheckedCreateWithoutOutgoingTransactionInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutOutgoingTransactionInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserCreateNestedOneWithoutIncomingTransactionInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutIncomingTransactionInput, Prisma.UserUncheckedCreateWithoutIncomingTransactionInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutIncomingTransactionInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutOutgoingTransactionNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutOutgoingTransactionInput, Prisma.UserUncheckedCreateWithoutOutgoingTransactionInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutOutgoingTransactionInput
  upsert?: Prisma.UserUpsertWithoutOutgoingTransactionInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutOutgoingTransactionInput, Prisma.UserUpdateWithoutOutgoingTransactionInput>, Prisma.UserUncheckedUpdateWithoutOutgoingTransactionInput>
}

export type UserUpdateOneRequiredWithoutIncomingTransactionNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutIncomingTransactionInput, Prisma.UserUncheckedCreateWithoutIncomingTransactionInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutIncomingTransactionInput
  upsert?: Prisma.UserUpsertWithoutIncomingTransactionInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutIncomingTransactionInput, Prisma.UserUpdateWithoutIncomingTransactionInput>, Prisma.UserUncheckedUpdateWithoutIncomingTransactionInput>
}

export type UserCreateNestedOneWithoutBankWithdrawalsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutBankWithdrawalsInput, Prisma.UserUncheckedCreateWithoutBankWithdrawalsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutBankWithdrawalsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutBankWithdrawalsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutBankWithdrawalsInput, Prisma.UserUncheckedCreateWithoutBankWithdrawalsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutBankWithdrawalsInput
  upsert?: Prisma.UserUpsertWithoutBankWithdrawalsInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutBankWithdrawalsInput, Prisma.UserUpdateWithoutBankWithdrawalsInput>, Prisma.UserUncheckedUpdateWithoutBankWithdrawalsInput>
}

export type UserCreateNestedOneWithoutSavedBankAccountsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutSavedBankAccountsInput, Prisma.UserUncheckedCreateWithoutSavedBankAccountsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutSavedBankAccountsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutSavedBankAccountsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutSavedBankAccountsInput, Prisma.UserUncheckedCreateWithoutSavedBankAccountsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutSavedBankAccountsInput
  upsert?: Prisma.UserUpsertWithoutSavedBankAccountsInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutSavedBankAccountsInput, Prisma.UserUpdateWithoutSavedBankAccountsInput>, Prisma.UserUncheckedUpdateWithoutSavedBankAccountsInput>
}

export type UserCreateWithoutPfpInput = {
  email: string
  name: string
  number: string
  password: string
  securityPin: string
  createdAt?: Date | string
  lastSessionAt?: Date | string
  failedPinTries?: number
  lastFailedPinTry?: Date | string | null
  Balance?: Prisma.BalanceCreateNestedManyWithoutUserInput
  Transactions?: Prisma.TransactionsCreateNestedManyWithoutUserInput
  IncomingTransaction?: Prisma.WalletTransfersCreateNestedManyWithoutToUserInput
  OutgoingTransaction?: Prisma.WalletTransfersCreateNestedManyWithoutFromUserInput
  SavedBankAccounts?: Prisma.SavedBankAccountsCreateNestedManyWithoutUserInput
  BankWithdrawals?: Prisma.BankWithdrawalsCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutPfpInput = {
  id?: number
  email: string
  name: string
  number: string
  password: string
  securityPin: string
  createdAt?: Date | string
  lastSessionAt?: Date | string
  failedPinTries?: number
  lastFailedPinTry?: Date | string | null
  Balance?: Prisma.BalanceUncheckedCreateNestedManyWithoutUserInput
  Transactions?: Prisma.TransactionsUncheckedCreateNestedManyWithoutUserInput
  IncomingTransaction?: Prisma.WalletTransfersUncheckedCreateNestedManyWithoutToUserInput
  OutgoingTransaction?: Prisma.WalletTransfersUncheckedCreateNestedManyWithoutFromUserInput
  SavedBankAccounts?: Prisma.SavedBankAccountsUncheckedCreateNestedManyWithoutUserInput
  BankWithdrawals?: Prisma.BankWithdrawalsUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutPfpInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutPfpInput, Prisma.UserUncheckedCreateWithoutPfpInput>
}

export type UserUpsertWithoutPfpInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutPfpInput, Prisma.UserUncheckedUpdateWithoutPfpInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutPfpInput, Prisma.UserUncheckedCreateWithoutPfpInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutPfpInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutPfpInput, Prisma.UserUncheckedUpdateWithoutPfpInput>
}

export type UserUpdateWithoutPfpInput = {
  email?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  number?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  securityPin?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastSessionAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  failedPinTries?: Prisma.IntFieldUpdateOperationsInput | number
  lastFailedPinTry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  Balance?: Prisma.BalanceUpdateManyWithoutUserNestedInput
  Transactions?: Prisma.TransactionsUpdateManyWithoutUserNestedInput
  IncomingTransaction?: Prisma.WalletTransfersUpdateManyWithoutToUserNestedInput
  OutgoingTransaction?: Prisma.WalletTransfersUpdateManyWithoutFromUserNestedInput
  SavedBankAccounts?: Prisma.SavedBankAccountsUpdateManyWithoutUserNestedInput
  BankWithdrawals?: Prisma.BankWithdrawalsUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutPfpInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  email?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  number?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  securityPin?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastSessionAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  failedPinTries?: Prisma.IntFieldUpdateOperationsInput | number
  lastFailedPinTry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  Balance?: Prisma.BalanceUncheckedUpdateManyWithoutUserNestedInput
  Transactions?: Prisma.TransactionsUncheckedUpdateManyWithoutUserNestedInput
  IncomingTransaction?: Prisma.WalletTransfersUncheckedUpdateManyWithoutToUserNestedInput
  OutgoingTransaction?: Prisma.WalletTransfersUncheckedUpdateManyWithoutFromUserNestedInput
  SavedBankAccounts?: Prisma.SavedBankAccountsUncheckedUpdateManyWithoutUserNestedInput
  BankWithdrawals?: Prisma.BankWithdrawalsUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateWithoutBalanceInput = {
  email: string
  name: string
  number: string
  password: string
  securityPin: string
  createdAt?: Date | string
  lastSessionAt?: Date | string
  failedPinTries?: number
  lastFailedPinTry?: Date | string | null
  pfp?: Prisma.Cloudinary_imagesCreateNestedOneWithoutUserInput
  Transactions?: Prisma.TransactionsCreateNestedManyWithoutUserInput
  IncomingTransaction?: Prisma.WalletTransfersCreateNestedManyWithoutToUserInput
  OutgoingTransaction?: Prisma.WalletTransfersCreateNestedManyWithoutFromUserInput
  SavedBankAccounts?: Prisma.SavedBankAccountsCreateNestedManyWithoutUserInput
  BankWithdrawals?: Prisma.BankWithdrawalsCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutBalanceInput = {
  id?: number
  email: string
  name: string
  number: string
  password: string
  securityPin: string
  createdAt?: Date | string
  lastSessionAt?: Date | string
  failedPinTries?: number
  lastFailedPinTry?: Date | string | null
  pfpPublicId?: string | null
  Transactions?: Prisma.TransactionsUncheckedCreateNestedManyWithoutUserInput
  IncomingTransaction?: Prisma.WalletTransfersUncheckedCreateNestedManyWithoutToUserInput
  OutgoingTransaction?: Prisma.WalletTransfersUncheckedCreateNestedManyWithoutFromUserInput
  SavedBankAccounts?: Prisma.SavedBankAccountsUncheckedCreateNestedManyWithoutUserInput
  BankWithdrawals?: Prisma.BankWithdrawalsUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutBalanceInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutBalanceInput, Prisma.UserUncheckedCreateWithoutBalanceInput>
}

export type UserUpsertWithoutBalanceInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutBalanceInput, Prisma.UserUncheckedUpdateWithoutBalanceInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutBalanceInput, Prisma.UserUncheckedCreateWithoutBalanceInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutBalanceInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutBalanceInput, Prisma.UserUncheckedUpdateWithoutBalanceInput>
}

export type UserUpdateWithoutBalanceInput = {
  email?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  number?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  securityPin?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastSessionAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  failedPinTries?: Prisma.IntFieldUpdateOperationsInput | number
  lastFailedPinTry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  pfp?: Prisma.Cloudinary_imagesUpdateOneWithoutUserNestedInput
  Transactions?: Prisma.TransactionsUpdateManyWithoutUserNestedInput
  IncomingTransaction?: Prisma.WalletTransfersUpdateManyWithoutToUserNestedInput
  OutgoingTransaction?: Prisma.WalletTransfersUpdateManyWithoutFromUserNestedInput
  SavedBankAccounts?: Prisma.SavedBankAccountsUpdateManyWithoutUserNestedInput
  BankWithdrawals?: Prisma.BankWithdrawalsUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutBalanceInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  email?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  number?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  securityPin?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastSessionAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  failedPinTries?: Prisma.IntFieldUpdateOperationsInput | number
  lastFailedPinTry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  pfpPublicId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  Transactions?: Prisma.TransactionsUncheckedUpdateManyWithoutUserNestedInput
  IncomingTransaction?: Prisma.WalletTransfersUncheckedUpdateManyWithoutToUserNestedInput
  OutgoingTransaction?: Prisma.WalletTransfersUncheckedUpdateManyWithoutFromUserNestedInput
  SavedBankAccounts?: Prisma.SavedBankAccountsUncheckedUpdateManyWithoutUserNestedInput
  BankWithdrawals?: Prisma.BankWithdrawalsUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateWithoutTransactionsInput = {
  email: string
  name: string
  number: string
  password: string
  securityPin: string
  createdAt?: Date | string
  lastSessionAt?: Date | string
  failedPinTries?: number
  lastFailedPinTry?: Date | string | null
  pfp?: Prisma.Cloudinary_imagesCreateNestedOneWithoutUserInput
  Balance?: Prisma.BalanceCreateNestedManyWithoutUserInput
  IncomingTransaction?: Prisma.WalletTransfersCreateNestedManyWithoutToUserInput
  OutgoingTransaction?: Prisma.WalletTransfersCreateNestedManyWithoutFromUserInput
  SavedBankAccounts?: Prisma.SavedBankAccountsCreateNestedManyWithoutUserInput
  BankWithdrawals?: Prisma.BankWithdrawalsCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutTransactionsInput = {
  id?: number
  email: string
  name: string
  number: string
  password: string
  securityPin: string
  createdAt?: Date | string
  lastSessionAt?: Date | string
  failedPinTries?: number
  lastFailedPinTry?: Date | string | null
  pfpPublicId?: string | null
  Balance?: Prisma.BalanceUncheckedCreateNestedManyWithoutUserInput
  IncomingTransaction?: Prisma.WalletTransfersUncheckedCreateNestedManyWithoutToUserInput
  OutgoingTransaction?: Prisma.WalletTransfersUncheckedCreateNestedManyWithoutFromUserInput
  SavedBankAccounts?: Prisma.SavedBankAccountsUncheckedCreateNestedManyWithoutUserInput
  BankWithdrawals?: Prisma.BankWithdrawalsUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutTransactionsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutTransactionsInput, Prisma.UserUncheckedCreateWithoutTransactionsInput>
}

export type UserUpsertWithoutTransactionsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutTransactionsInput, Prisma.UserUncheckedUpdateWithoutTransactionsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutTransactionsInput, Prisma.UserUncheckedCreateWithoutTransactionsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutTransactionsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutTransactionsInput, Prisma.UserUncheckedUpdateWithoutTransactionsInput>
}

export type UserUpdateWithoutTransactionsInput = {
  email?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  number?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  securityPin?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastSessionAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  failedPinTries?: Prisma.IntFieldUpdateOperationsInput | number
  lastFailedPinTry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  pfp?: Prisma.Cloudinary_imagesUpdateOneWithoutUserNestedInput
  Balance?: Prisma.BalanceUpdateManyWithoutUserNestedInput
  IncomingTransaction?: Prisma.WalletTransfersUpdateManyWithoutToUserNestedInput
  OutgoingTransaction?: Prisma.WalletTransfersUpdateManyWithoutFromUserNestedInput
  SavedBankAccounts?: Prisma.SavedBankAccountsUpdateManyWithoutUserNestedInput
  BankWithdrawals?: Prisma.BankWithdrawalsUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutTransactionsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  email?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  number?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  securityPin?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastSessionAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  failedPinTries?: Prisma.IntFieldUpdateOperationsInput | number
  lastFailedPinTry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  pfpPublicId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  Balance?: Prisma.BalanceUncheckedUpdateManyWithoutUserNestedInput
  IncomingTransaction?: Prisma.WalletTransfersUncheckedUpdateManyWithoutToUserNestedInput
  OutgoingTransaction?: Prisma.WalletTransfersUncheckedUpdateManyWithoutFromUserNestedInput
  SavedBankAccounts?: Prisma.SavedBankAccountsUncheckedUpdateManyWithoutUserNestedInput
  BankWithdrawals?: Prisma.BankWithdrawalsUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateWithoutOutgoingTransactionInput = {
  email: string
  name: string
  number: string
  password: string
  securityPin: string
  createdAt?: Date | string
  lastSessionAt?: Date | string
  failedPinTries?: number
  lastFailedPinTry?: Date | string | null
  pfp?: Prisma.Cloudinary_imagesCreateNestedOneWithoutUserInput
  Balance?: Prisma.BalanceCreateNestedManyWithoutUserInput
  Transactions?: Prisma.TransactionsCreateNestedManyWithoutUserInput
  IncomingTransaction?: Prisma.WalletTransfersCreateNestedManyWithoutToUserInput
  SavedBankAccounts?: Prisma.SavedBankAccountsCreateNestedManyWithoutUserInput
  BankWithdrawals?: Prisma.BankWithdrawalsCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutOutgoingTransactionInput = {
  id?: number
  email: string
  name: string
  number: string
  password: string
  securityPin: string
  createdAt?: Date | string
  lastSessionAt?: Date | string
  failedPinTries?: number
  lastFailedPinTry?: Date | string | null
  pfpPublicId?: string | null
  Balance?: Prisma.BalanceUncheckedCreateNestedManyWithoutUserInput
  Transactions?: Prisma.TransactionsUncheckedCreateNestedManyWithoutUserInput
  IncomingTransaction?: Prisma.WalletTransfersUncheckedCreateNestedManyWithoutToUserInput
  SavedBankAccounts?: Prisma.SavedBankAccountsUncheckedCreateNestedManyWithoutUserInput
  BankWithdrawals?: Prisma.BankWithdrawalsUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutOutgoingTransactionInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutOutgoingTransactionInput, Prisma.UserUncheckedCreateWithoutOutgoingTransactionInput>
}

export type UserCreateWithoutIncomingTransactionInput = {
  email: string
  name: string
  number: string
  password: string
  securityPin: string
  createdAt?: Date | string
  lastSessionAt?: Date | string
  failedPinTries?: number
  lastFailedPinTry?: Date | string | null
  pfp?: Prisma.Cloudinary_imagesCreateNestedOneWithoutUserInput
  Balance?: Prisma.BalanceCreateNestedManyWithoutUserInput
  Transactions?: Prisma.TransactionsCreateNestedManyWithoutUserInput
  OutgoingTransaction?: Prisma.WalletTransfersCreateNestedManyWithoutFromUserInput
  SavedBankAccounts?: Prisma.SavedBankAccountsCreateNestedManyWithoutUserInput
  BankWithdrawals?: Prisma.BankWithdrawalsCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutIncomingTransactionInput = {
  id?: number
  email: string
  name: string
  number: string
  password: string
  securityPin: string
  createdAt?: Date | string
  lastSessionAt?: Date | string
  failedPinTries?: number
  lastFailedPinTry?: Date | string | null
  pfpPublicId?: string | null
  Balance?: Prisma.BalanceUncheckedCreateNestedManyWithoutUserInput
  Transactions?: Prisma.TransactionsUncheckedCreateNestedManyWithoutUserInput
  OutgoingTransaction?: Prisma.WalletTransfersUncheckedCreateNestedManyWithoutFromUserInput
  SavedBankAccounts?: Prisma.SavedBankAccountsUncheckedCreateNestedManyWithoutUserInput
  BankWithdrawals?: Prisma.BankWithdrawalsUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutIncomingTransactionInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutIncomingTransactionInput, Prisma.UserUncheckedCreateWithoutIncomingTransactionInput>
}

export type UserUpsertWithoutOutgoingTransactionInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutOutgoingTransactionInput, Prisma.UserUncheckedUpdateWithoutOutgoingTransactionInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutOutgoingTransactionInput, Prisma.UserUncheckedCreateWithoutOutgoingTransactionInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutOutgoingTransactionInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutOutgoingTransactionInput, Prisma.UserUncheckedUpdateWithoutOutgoingTransactionInput>
}

export type UserUpdateWithoutOutgoingTransactionInput = {
  email?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  number?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  securityPin?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastSessionAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  failedPinTries?: Prisma.IntFieldUpdateOperationsInput | number
  lastFailedPinTry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  pfp?: Prisma.Cloudinary_imagesUpdateOneWithoutUserNestedInput
  Balance?: Prisma.BalanceUpdateManyWithoutUserNestedInput
  Transactions?: Prisma.TransactionsUpdateManyWithoutUserNestedInput
  IncomingTransaction?: Prisma.WalletTransfersUpdateManyWithoutToUserNestedInput
  SavedBankAccounts?: Prisma.SavedBankAccountsUpdateManyWithoutUserNestedInput
  BankWithdrawals?: Prisma.BankWithdrawalsUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutOutgoingTransactionInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  email?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  number?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  securityPin?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastSessionAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  failedPinTries?: Prisma.IntFieldUpdateOperationsInput | number
  lastFailedPinTry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  pfpPublicId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  Balance?: Prisma.BalanceUncheckedUpdateManyWithoutUserNestedInput
  Transactions?: Prisma.TransactionsUncheckedUpdateManyWithoutUserNestedInput
  IncomingTransaction?: Prisma.WalletTransfersUncheckedUpdateManyWithoutToUserNestedInput
  SavedBankAccounts?: Prisma.SavedBankAccountsUncheckedUpdateManyWithoutUserNestedInput
  BankWithdrawals?: Prisma.BankWithdrawalsUncheckedUpdateManyWithoutUserNestedInput
}

export type UserUpsertWithoutIncomingTransactionInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutIncomingTransactionInput, Prisma.UserUncheckedUpdateWithoutIncomingTransactionInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutIncomingTransactionInput, Prisma.UserUncheckedCreateWithoutIncomingTransactionInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutIncomingTransactionInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutIncomingTransactionInput, Prisma.UserUncheckedUpdateWithoutIncomingTransactionInput>
}

export type UserUpdateWithoutIncomingTransactionInput = {
  email?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  number?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  securityPin?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastSessionAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  failedPinTries?: Prisma.IntFieldUpdateOperationsInput | number
  lastFailedPinTry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  pfp?: Prisma.Cloudinary_imagesUpdateOneWithoutUserNestedInput
  Balance?: Prisma.BalanceUpdateManyWithoutUserNestedInput
  Transactions?: Prisma.TransactionsUpdateManyWithoutUserNestedInput
  OutgoingTransaction?: Prisma.WalletTransfersUpdateManyWithoutFromUserNestedInput
  SavedBankAccounts?: Prisma.SavedBankAccountsUpdateManyWithoutUserNestedInput
  BankWithdrawals?: Prisma.BankWithdrawalsUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutIncomingTransactionInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  email?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  number?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  securityPin?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastSessionAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  failedPinTries?: Prisma.IntFieldUpdateOperationsInput | number
  lastFailedPinTry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  pfpPublicId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  Balance?: Prisma.BalanceUncheckedUpdateManyWithoutUserNestedInput
  Transactions?: Prisma.TransactionsUncheckedUpdateManyWithoutUserNestedInput
  OutgoingTransaction?: Prisma.WalletTransfersUncheckedUpdateManyWithoutFromUserNestedInput
  SavedBankAccounts?: Prisma.SavedBankAccountsUncheckedUpdateManyWithoutUserNestedInput
  BankWithdrawals?: Prisma.BankWithdrawalsUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateWithoutBankWithdrawalsInput = {
  email: string
  name: string
  number: string
  password: string
  securityPin: string
  createdAt?: Date | string
  lastSessionAt?: Date | string
  failedPinTries?: number
  lastFailedPinTry?: Date | string | null
  pfp?: Prisma.Cloudinary_imagesCreateNestedOneWithoutUserInput
  Balance?: Prisma.BalanceCreateNestedManyWithoutUserInput
  Transactions?: Prisma.TransactionsCreateNestedManyWithoutUserInput
  IncomingTransaction?: Prisma.WalletTransfersCreateNestedManyWithoutToUserInput
  OutgoingTransaction?: Prisma.WalletTransfersCreateNestedManyWithoutFromUserInput
  SavedBankAccounts?: Prisma.SavedBankAccountsCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutBankWithdrawalsInput = {
  id?: number
  email: string
  name: string
  number: string
  password: string
  securityPin: string
  createdAt?: Date | string
  lastSessionAt?: Date | string
  failedPinTries?: number
  lastFailedPinTry?: Date | string | null
  pfpPublicId?: string | null
  Balance?: Prisma.BalanceUncheckedCreateNestedManyWithoutUserInput
  Transactions?: Prisma.TransactionsUncheckedCreateNestedManyWithoutUserInput
  IncomingTransaction?: Prisma.WalletTransfersUncheckedCreateNestedManyWithoutToUserInput
  OutgoingTransaction?: Prisma.WalletTransfersUncheckedCreateNestedManyWithoutFromUserInput
  SavedBankAccounts?: Prisma.SavedBankAccountsUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutBankWithdrawalsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutBankWithdrawalsInput, Prisma.UserUncheckedCreateWithoutBankWithdrawalsInput>
}

export type UserUpsertWithoutBankWithdrawalsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutBankWithdrawalsInput, Prisma.UserUncheckedUpdateWithoutBankWithdrawalsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutBankWithdrawalsInput, Prisma.UserUncheckedCreateWithoutBankWithdrawalsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutBankWithdrawalsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutBankWithdrawalsInput, Prisma.UserUncheckedUpdateWithoutBankWithdrawalsInput>
}

export type UserUpdateWithoutBankWithdrawalsInput = {
  email?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  number?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  securityPin?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastSessionAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  failedPinTries?: Prisma.IntFieldUpdateOperationsInput | number
  lastFailedPinTry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  pfp?: Prisma.Cloudinary_imagesUpdateOneWithoutUserNestedInput
  Balance?: Prisma.BalanceUpdateManyWithoutUserNestedInput
  Transactions?: Prisma.TransactionsUpdateManyWithoutUserNestedInput
  IncomingTransaction?: Prisma.WalletTransfersUpdateManyWithoutToUserNestedInput
  OutgoingTransaction?: Prisma.WalletTransfersUpdateManyWithoutFromUserNestedInput
  SavedBankAccounts?: Prisma.SavedBankAccountsUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutBankWithdrawalsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  email?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  number?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  securityPin?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastSessionAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  failedPinTries?: Prisma.IntFieldUpdateOperationsInput | number
  lastFailedPinTry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  pfpPublicId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  Balance?: Prisma.BalanceUncheckedUpdateManyWithoutUserNestedInput
  Transactions?: Prisma.TransactionsUncheckedUpdateManyWithoutUserNestedInput
  IncomingTransaction?: Prisma.WalletTransfersUncheckedUpdateManyWithoutToUserNestedInput
  OutgoingTransaction?: Prisma.WalletTransfersUncheckedUpdateManyWithoutFromUserNestedInput
  SavedBankAccounts?: Prisma.SavedBankAccountsUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateWithoutSavedBankAccountsInput = {
  email: string
  name: string
  number: string
  password: string
  securityPin: string
  createdAt?: Date | string
  lastSessionAt?: Date | string
  failedPinTries?: number
  lastFailedPinTry?: Date | string | null
  pfp?: Prisma.Cloudinary_imagesCreateNestedOneWithoutUserInput
  Balance?: Prisma.BalanceCreateNestedManyWithoutUserInput
  Transactions?: Prisma.TransactionsCreateNestedManyWithoutUserInput
  IncomingTransaction?: Prisma.WalletTransfersCreateNestedManyWithoutToUserInput
  OutgoingTransaction?: Prisma.WalletTransfersCreateNestedManyWithoutFromUserInput
  BankWithdrawals?: Prisma.BankWithdrawalsCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutSavedBankAccountsInput = {
  id?: number
  email: string
  name: string
  number: string
  password: string
  securityPin: string
  createdAt?: Date | string
  lastSessionAt?: Date | string
  failedPinTries?: number
  lastFailedPinTry?: Date | string | null
  pfpPublicId?: string | null
  Balance?: Prisma.BalanceUncheckedCreateNestedManyWithoutUserInput
  Transactions?: Prisma.TransactionsUncheckedCreateNestedManyWithoutUserInput
  IncomingTransaction?: Prisma.WalletTransfersUncheckedCreateNestedManyWithoutToUserInput
  OutgoingTransaction?: Prisma.WalletTransfersUncheckedCreateNestedManyWithoutFromUserInput
  BankWithdrawals?: Prisma.BankWithdrawalsUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutSavedBankAccountsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutSavedBankAccountsInput, Prisma.UserUncheckedCreateWithoutSavedBankAccountsInput>
}

export type UserUpsertWithoutSavedBankAccountsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutSavedBankAccountsInput, Prisma.UserUncheckedUpdateWithoutSavedBankAccountsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutSavedBankAccountsInput, Prisma.UserUncheckedCreateWithoutSavedBankAccountsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutSavedBankAccountsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutSavedBankAccountsInput, Prisma.UserUncheckedUpdateWithoutSavedBankAccountsInput>
}

export type UserUpdateWithoutSavedBankAccountsInput = {
  email?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  number?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  securityPin?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastSessionAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  failedPinTries?: Prisma.IntFieldUpdateOperationsInput | number
  lastFailedPinTry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  pfp?: Prisma.Cloudinary_imagesUpdateOneWithoutUserNestedInput
  Balance?: Prisma.BalanceUpdateManyWithoutUserNestedInput
  Transactions?: Prisma.TransactionsUpdateManyWithoutUserNestedInput
  IncomingTransaction?: Prisma.WalletTransfersUpdateManyWithoutToUserNestedInput
  OutgoingTransaction?: Prisma.WalletTransfersUpdateManyWithoutFromUserNestedInput
  BankWithdrawals?: Prisma.BankWithdrawalsUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutSavedBankAccountsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  email?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  number?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  securityPin?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastSessionAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  failedPinTries?: Prisma.IntFieldUpdateOperationsInput | number
  lastFailedPinTry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  pfpPublicId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  Balance?: Prisma.BalanceUncheckedUpdateManyWithoutUserNestedInput
  Transactions?: Prisma.TransactionsUncheckedUpdateManyWithoutUserNestedInput
  IncomingTransaction?: Prisma.WalletTransfersUncheckedUpdateManyWithoutToUserNestedInput
  OutgoingTransaction?: Prisma.WalletTransfersUncheckedUpdateManyWithoutFromUserNestedInput
  BankWithdrawals?: Prisma.BankWithdrawalsUncheckedUpdateManyWithoutUserNestedInput
}


/**
 * Count Type UserCountOutputType
 */

export type UserCountOutputType = {
  Balance: number
  Transactions: number
  IncomingTransaction: number
  OutgoingTransaction: number
  SavedBankAccounts: number
  BankWithdrawals: number
}

export type UserCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Balance?: boolean | UserCountOutputTypeCountBalanceArgs
  Transactions?: boolean | UserCountOutputTypeCountTransactionsArgs
  IncomingTransaction?: boolean | UserCountOutputTypeCountIncomingTransactionArgs
  OutgoingTransaction?: boolean | UserCountOutputTypeCountOutgoingTransactionArgs
  SavedBankAccounts?: boolean | UserCountOutputTypeCountSavedBankAccountsArgs
  BankWithdrawals?: boolean | UserCountOutputTypeCountBankWithdrawalsArgs
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserCountOutputType
   */
  select?: Prisma.UserCountOutputTypeSelect<ExtArgs> | null
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountBalanceArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.BalanceWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountTransactionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TransactionsWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountIncomingTransactionArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.WalletTransfersWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountOutgoingTransactionArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.WalletTransfersWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountSavedBankAccountsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.SavedBankAccountsWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountBankWithdrawalsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.BankWithdrawalsWhereInput
}


export type UserSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  email?: boolean
  name?: boolean
  number?: boolean
  password?: boolean
  securityPin?: boolean
  createdAt?: boolean
  lastSessionAt?: boolean
  failedPinTries?: boolean
  lastFailedPinTry?: boolean
  pfpPublicId?: boolean
  pfp?: boolean | Prisma.User$pfpArgs<ExtArgs>
  Balance?: boolean | Prisma.User$BalanceArgs<ExtArgs>
  Transactions?: boolean | Prisma.User$TransactionsArgs<ExtArgs>
  IncomingTransaction?: boolean | Prisma.User$IncomingTransactionArgs<ExtArgs>
  OutgoingTransaction?: boolean | Prisma.User$OutgoingTransactionArgs<ExtArgs>
  SavedBankAccounts?: boolean | Prisma.User$SavedBankAccountsArgs<ExtArgs>
  BankWithdrawals?: boolean | Prisma.User$BankWithdrawalsArgs<ExtArgs>
  _count?: boolean | Prisma.UserCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["user"]>

export type UserSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  email?: boolean
  name?: boolean
  number?: boolean
  password?: boolean
  securityPin?: boolean
  createdAt?: boolean
  lastSessionAt?: boolean
  failedPinTries?: boolean
  lastFailedPinTry?: boolean
  pfpPublicId?: boolean
  pfp?: boolean | Prisma.User$pfpArgs<ExtArgs>
}, ExtArgs["result"]["user"]>

export type UserSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  email?: boolean
  name?: boolean
  number?: boolean
  password?: boolean
  securityPin?: boolean
  createdAt?: boolean
  lastSessionAt?: boolean
  failedPinTries?: boolean
  lastFailedPinTry?: boolean
  pfpPublicId?: boolean
  pfp?: boolean | Prisma.User$pfpArgs<ExtArgs>
}, ExtArgs["result"]["user"]>

export type UserSelectScalar = {
  id?: boolean
  email?: boolean
  name?: boolean
  number?: boolean
  password?: boolean
  securityPin?: boolean
  createdAt?: boolean
  lastSessionAt?: boolean
  failedPinTries?: boolean
  lastFailedPinTry?: boolean
  pfpPublicId?: boolean
}

export type UserOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "email" | "name" | "number" | "password" | "securityPin" | "createdAt" | "lastSessionAt" | "failedPinTries" | "lastFailedPinTry" | "pfpPublicId", ExtArgs["result"]["user"]>
export type UserInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  pfp?: boolean | Prisma.User$pfpArgs<ExtArgs>
  Balance?: boolean | Prisma.User$BalanceArgs<ExtArgs>
  Transactions?: boolean | Prisma.User$TransactionsArgs<ExtArgs>
  IncomingTransaction?: boolean | Prisma.User$IncomingTransactionArgs<ExtArgs>
  OutgoingTransaction?: boolean | Prisma.User$OutgoingTransactionArgs<ExtArgs>
  SavedBankAccounts?: boolean | Prisma.User$SavedBankAccountsArgs<ExtArgs>
  BankWithdrawals?: boolean | Prisma.User$BankWithdrawalsArgs<ExtArgs>
  _count?: boolean | Prisma.UserCountOutputTypeDefaultArgs<ExtArgs>
}
export type UserIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  pfp?: boolean | Prisma.User$pfpArgs<ExtArgs>
}
export type UserIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  pfp?: boolean | Prisma.User$pfpArgs<ExtArgs>
}

export type $UserPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "User"
  objects: {
    pfp: Prisma.$Cloudinary_imagesPayload<ExtArgs> | null
    Balance: Prisma.$BalancePayload<ExtArgs>[]
    Transactions: Prisma.$TransactionsPayload<ExtArgs>[]
    IncomingTransaction: Prisma.$WalletTransfersPayload<ExtArgs>[]
    OutgoingTransaction: Prisma.$WalletTransfersPayload<ExtArgs>[]
    SavedBankAccounts: Prisma.$SavedBankAccountsPayload<ExtArgs>[]
    BankWithdrawals: Prisma.$BankWithdrawalsPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    email: string
    name: string
    number: string
    password: string
    securityPin: string
    createdAt: Date
    lastSessionAt: Date
    failedPinTries: number
    lastFailedPinTry: Date | null
    pfpPublicId: string | null
  }, ExtArgs["result"]["user"]>
  composites: {}
}

export type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$UserPayload, S>

export type UserCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: UserCountAggregateInputType | true
  }

export interface UserDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
  /**
   * Find zero or one User that matches the filter.
   * @param {UserFindUniqueArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends UserFindUniqueArgs>(args: Prisma.SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one User that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first User that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindFirstArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends UserFindFirstArgs>(args?: Prisma.SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first User that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Users that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Users
   * const users = await prisma.user.findMany()
   * 
   * // Get first 10 Users
   * const users = await prisma.user.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends UserFindManyArgs>(args?: Prisma.SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a User.
   * @param {UserCreateArgs} args - Arguments to create a User.
   * @example
   * // Create one User
   * const User = await prisma.user.create({
   *   data: {
   *     // ... data to create a User
   *   }
   * })
   * 
   */
  create<T extends UserCreateArgs>(args: Prisma.SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Users.
   * @param {UserCreateManyArgs} args - Arguments to create many Users.
   * @example
   * // Create many Users
   * const user = await prisma.user.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends UserCreateManyArgs>(args?: Prisma.SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Users and returns the data saved in the database.
   * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
   * @example
   * // Create many Users
   * const user = await prisma.user.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Users and only return the `id`
   * const userWithIdOnly = await prisma.user.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a User.
   * @param {UserDeleteArgs} args - Arguments to delete one User.
   * @example
   * // Delete one User
   * const User = await prisma.user.delete({
   *   where: {
   *     // ... filter to delete one User
   *   }
   * })
   * 
   */
  delete<T extends UserDeleteArgs>(args: Prisma.SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one User.
   * @param {UserUpdateArgs} args - Arguments to update one User.
   * @example
   * // Update one User
   * const user = await prisma.user.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends UserUpdateArgs>(args: Prisma.SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Users.
   * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
   * @example
   * // Delete a few Users
   * const { count } = await prisma.user.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends UserDeleteManyArgs>(args?: Prisma.SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Users.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Users
   * const user = await prisma.user.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends UserUpdateManyArgs>(args: Prisma.SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Users and returns the data updated in the database.
   * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
   * @example
   * // Update many Users
   * const user = await prisma.user.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Users and only return the `id`
   * const userWithIdOnly = await prisma.user.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one User.
   * @param {UserUpsertArgs} args - Arguments to update or create a User.
   * @example
   * // Update or create a User
   * const user = await prisma.user.upsert({
   *   create: {
   *     // ... data to create a User
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the User we want to update
   *   }
   * })
   */
  upsert<T extends UserUpsertArgs>(args: Prisma.SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Users.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserCountArgs} args - Arguments to filter Users to count.
   * @example
   * // Count the number of Users
   * const count = await prisma.user.count({
   *   where: {
   *     // ... the filter for the Users we want to count
   *   }
   * })
  **/
  count<T extends UserCountArgs>(
    args?: Prisma.Subset<T, UserCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], UserCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a User.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends UserAggregateArgs>(args: Prisma.Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

  /**
   * Group by User.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends UserGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: UserGroupByArgs['orderBy'] }
      : { orderBy?: UserGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the User model
 */
readonly fields: UserFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for User.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__UserClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  pfp<T extends Prisma.User$pfpArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$pfpArgs<ExtArgs>>): Prisma.Prisma__Cloudinary_imagesClient<runtime.Types.Result.GetResult<Prisma.$Cloudinary_imagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  Balance<T extends Prisma.User$BalanceArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$BalanceArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$BalancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  Transactions<T extends Prisma.User$TransactionsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$TransactionsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TransactionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  IncomingTransaction<T extends Prisma.User$IncomingTransactionArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$IncomingTransactionArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WalletTransfersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  OutgoingTransaction<T extends Prisma.User$OutgoingTransactionArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$OutgoingTransactionArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WalletTransfersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  SavedBankAccounts<T extends Prisma.User$SavedBankAccountsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$SavedBankAccountsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$SavedBankAccountsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  BankWithdrawals<T extends Prisma.User$BankWithdrawalsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$BankWithdrawalsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$BankWithdrawalsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the User model
 */
export interface UserFieldRefs {
  readonly id: Prisma.FieldRef<"User", 'Int'>
  readonly email: Prisma.FieldRef<"User", 'String'>
  readonly name: Prisma.FieldRef<"User", 'String'>
  readonly number: Prisma.FieldRef<"User", 'String'>
  readonly password: Prisma.FieldRef<"User", 'String'>
  readonly securityPin: Prisma.FieldRef<"User", 'String'>
  readonly createdAt: Prisma.FieldRef<"User", 'DateTime'>
  readonly lastSessionAt: Prisma.FieldRef<"User", 'DateTime'>
  readonly failedPinTries: Prisma.FieldRef<"User", 'Int'>
  readonly lastFailedPinTry: Prisma.FieldRef<"User", 'DateTime'>
  readonly pfpPublicId: Prisma.FieldRef<"User", 'String'>
}
    

// Custom InputTypes
/**
 * User findUnique
 */
export type UserFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where: Prisma.UserWhereUniqueInput
}

/**
 * User findUniqueOrThrow
 */
export type UserFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where: Prisma.UserWhereUniqueInput
}

/**
 * User findFirst
 */
export type UserFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Users.
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Users.
   */
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[]
}

/**
 * User findFirstOrThrow
 */
export type UserFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Users.
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Users.
   */
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[]
}

/**
 * User findMany
 */
export type UserFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which Users to fetch.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Users.
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[]
}

/**
 * User create
 */
export type UserCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * The data needed to create a User.
   */
  data: Prisma.XOR<Prisma.UserCreateInput, Prisma.UserUncheckedCreateInput>
}

/**
 * User createMany
 */
export type UserCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Users.
   */
  data: Prisma.UserCreateManyInput | Prisma.UserCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * User createManyAndReturn
 */
export type UserCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * The data used to create many Users.
   */
  data: Prisma.UserCreateManyInput | Prisma.UserCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * User update
 */
export type UserUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * The data needed to update a User.
   */
  data: Prisma.XOR<Prisma.UserUpdateInput, Prisma.UserUncheckedUpdateInput>
  /**
   * Choose, which User to update.
   */
  where: Prisma.UserWhereUniqueInput
}

/**
 * User updateMany
 */
export type UserUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Users.
   */
  data: Prisma.XOR<Prisma.UserUpdateManyMutationInput, Prisma.UserUncheckedUpdateManyInput>
  /**
   * Filter which Users to update
   */
  where?: Prisma.UserWhereInput
  /**
   * Limit how many Users to update.
   */
  limit?: number
}

/**
 * User updateManyAndReturn
 */
export type UserUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * The data used to update Users.
   */
  data: Prisma.XOR<Prisma.UserUpdateManyMutationInput, Prisma.UserUncheckedUpdateManyInput>
  /**
   * Filter which Users to update
   */
  where?: Prisma.UserWhereInput
  /**
   * Limit how many Users to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * User upsert
 */
export type UserUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * The filter to search for the User to update in case it exists.
   */
  where: Prisma.UserWhereUniqueInput
  /**
   * In case the User found by the `where` argument doesn't exist, create a new User with this data.
   */
  create: Prisma.XOR<Prisma.UserCreateInput, Prisma.UserUncheckedCreateInput>
  /**
   * In case the User was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.UserUpdateInput, Prisma.UserUncheckedUpdateInput>
}

/**
 * User delete
 */
export type UserDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter which User to delete.
   */
  where: Prisma.UserWhereUniqueInput
}

/**
 * User deleteMany
 */
export type UserDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Users to delete
   */
  where?: Prisma.UserWhereInput
  /**
   * Limit how many Users to delete.
   */
  limit?: number
}

/**
 * User.pfp
 */
export type User$pfpArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Cloudinary_images
   */
  select?: Prisma.Cloudinary_imagesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Cloudinary_images
   */
  omit?: Prisma.Cloudinary_imagesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.Cloudinary_imagesInclude<ExtArgs> | null
  where?: Prisma.Cloudinary_imagesWhereInput
}

/**
 * User.Balance
 */
export type User$BalanceArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Balance
   */
  select?: Prisma.BalanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Balance
   */
  omit?: Prisma.BalanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BalanceInclude<ExtArgs> | null
  where?: Prisma.BalanceWhereInput
  orderBy?: Prisma.BalanceOrderByWithRelationInput | Prisma.BalanceOrderByWithRelationInput[]
  cursor?: Prisma.BalanceWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.BalanceScalarFieldEnum | Prisma.BalanceScalarFieldEnum[]
}

/**
 * User.Transactions
 */
export type User$TransactionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Transactions
   */
  select?: Prisma.TransactionsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Transactions
   */
  omit?: Prisma.TransactionsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TransactionsInclude<ExtArgs> | null
  where?: Prisma.TransactionsWhereInput
  orderBy?: Prisma.TransactionsOrderByWithRelationInput | Prisma.TransactionsOrderByWithRelationInput[]
  cursor?: Prisma.TransactionsWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TransactionsScalarFieldEnum | Prisma.TransactionsScalarFieldEnum[]
}

/**
 * User.IncomingTransaction
 */
export type User$IncomingTransactionArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WalletTransfers
   */
  select?: Prisma.WalletTransfersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WalletTransfers
   */
  omit?: Prisma.WalletTransfersOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WalletTransfersInclude<ExtArgs> | null
  where?: Prisma.WalletTransfersWhereInput
  orderBy?: Prisma.WalletTransfersOrderByWithRelationInput | Prisma.WalletTransfersOrderByWithRelationInput[]
  cursor?: Prisma.WalletTransfersWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.WalletTransfersScalarFieldEnum | Prisma.WalletTransfersScalarFieldEnum[]
}

/**
 * User.OutgoingTransaction
 */
export type User$OutgoingTransactionArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WalletTransfers
   */
  select?: Prisma.WalletTransfersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WalletTransfers
   */
  omit?: Prisma.WalletTransfersOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WalletTransfersInclude<ExtArgs> | null
  where?: Prisma.WalletTransfersWhereInput
  orderBy?: Prisma.WalletTransfersOrderByWithRelationInput | Prisma.WalletTransfersOrderByWithRelationInput[]
  cursor?: Prisma.WalletTransfersWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.WalletTransfersScalarFieldEnum | Prisma.WalletTransfersScalarFieldEnum[]
}

/**
 * User.SavedBankAccounts
 */
export type User$SavedBankAccountsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the SavedBankAccounts
   */
  select?: Prisma.SavedBankAccountsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the SavedBankAccounts
   */
  omit?: Prisma.SavedBankAccountsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SavedBankAccountsInclude<ExtArgs> | null
  where?: Prisma.SavedBankAccountsWhereInput
  orderBy?: Prisma.SavedBankAccountsOrderByWithRelationInput | Prisma.SavedBankAccountsOrderByWithRelationInput[]
  cursor?: Prisma.SavedBankAccountsWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.SavedBankAccountsScalarFieldEnum | Prisma.SavedBankAccountsScalarFieldEnum[]
}

/**
 * User.BankWithdrawals
 */
export type User$BankWithdrawalsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the BankWithdrawals
   */
  select?: Prisma.BankWithdrawalsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the BankWithdrawals
   */
  omit?: Prisma.BankWithdrawalsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BankWithdrawalsInclude<ExtArgs> | null
  where?: Prisma.BankWithdrawalsWhereInput
  orderBy?: Prisma.BankWithdrawalsOrderByWithRelationInput | Prisma.BankWithdrawalsOrderByWithRelationInput[]
  cursor?: Prisma.BankWithdrawalsWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.BankWithdrawalsScalarFieldEnum | Prisma.BankWithdrawalsScalarFieldEnum[]
}

/**
 * User without action
 */
export type UserDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
}
